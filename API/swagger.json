{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0",
    "title" : "Digital Capability Publisher (DCP) interface specification",
    "description" : "The \"Digital Capability Publisher\" (DCP) provides the ability to discover detailed service information and associated digital certificates for any known business identifier. \n\nPlease mind the test installation and ensure data validity - some of such installations have data like in production, with real businesses, but this data is not guaranteed to be valid and may be changed in development purposes; do not rely on data from specific hostname to real-world production installation until service owners specifically said it's true and valid. For example, any *.testpoint.io installations have the test data and can't be used in production.\n\nThis API specification should be valid for all supporting installations and implementations.\n\nIf you want OASIS XML output:\n* pass Accept header with 'application/xml' value\n* pass ?format=xml as GET query parameter\n\nOASIS-compliant urls also supported (but it is strongy recommended to implement json, just because JSON is more flexible and contains more information). Examples:\n\n* https://dcp.testpoint.io/urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307?format=xml\n* https://dcp.testpoint.io/urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307/service/dbc::invoice?format=xml\n  \nPlease note that JSON format differs from specification XML and has more data in it.\n\nIf you want to do any authenticated test requests then it's better to use CURL, not Swaggerhub website.\n"
  },
  "host" : "dcp.testpoint.io",
  "schemes" : [ "https", "http" ],
  "basePath" : "/api/v0",
  "securityDefinitions" : {
    "Bearer" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://idp.testpoint.io/authorize",
      "flow" : "implicit",
      "description" : "Bearer token value and raw JWT token may be found on /security/integration/"
    },
    "Apikey" : {
      "type" : "apiKey",
      "in" : "header",
      "name" : "Authorization: ApiKey",
      "description" : "Api token from /security/integration/ page"
    }
  },
  "produces" : [ "application/json", "application/xml", "text/html" ],
  "parameters" : {
    "participantIdUrlParameter" : {
      "name" : "participant_id",
      "in" : "path",
      "description" : "string representation or hash",
      "required" : true,
      "type" : "string",
      "default" : "urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307"
    },
    "serviceIdUrlParameter" : {
      "name" : "id",
      "in" : "path",
      "description" : "ID of service metadata as string or hash",
      "required" : true,
      "type" : "string",
      "default" : "dbc::invoice"
    },
    "serviceGroupNameUrlParameter" : {
      "name" : "name",
      "in" : "path",
      "description" : "name of service group object, string, 'default' or custom name",
      "required" : true,
      "type" : "string",
      "default" : "default"
    }
  },
  "paths" : {
    "/demo_auth/" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "Get base user information with authentication enabled",
        "description" : "Check if OIDC JWT or oauth2 Bearer or ApiKey token correct",
        "operationId" : "DemoAuth",
        "responses" : {
          "200" : {
            "description" : "Bearer/JWT is correct"
          },
          "401" : {
            "description" : "wrong auth parameters"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        }, {
          "Apikey" : [ ]
        } ]
      }
    },
    "/businesses/" : {
      "get" : {
        "tags" : [ "Businesses" ],
        "summary" : "Participants list",
        "description" : "Returns full list of all public participants in the database",
        "operationId" : "BusinessList",
        "parameters" : [ {
          "name" : "show_facets",
          "in" : "query",
          "description" : "return facets (1) or not (0, default)",
          "required" : false,
          "type" : "number",
          "default" : 0
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Freetext value to search by; proxied to search backend",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entity_type",
          "in" : "query",
          "description" : "Entity type; check 'facets' output for possible values; requires exact match",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "location_state",
          "in" : "query",
          "description" : "Location.state value; check 'facets' output for possible values; requires exact match",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "registration_status",
          "in" : "query",
          "description" : "ACT or CAN",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "year_from",
          "in" : "query",
          "description" : "Minimal year value (inclusive) to filter search results",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "year_to",
          "in" : "query",
          "description" : "Maximal year value (inclusive) to filter search results",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "list of participants with basic information",
            "schema" : {
              "$ref" : "#/definitions/BusinessesList"
            }
          },
          "400" : {
            "description" : "wrong filters values or limits."
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "internal server error; no action required; may help to retry request later or contact support."
          }
        }
      }
    },
    "/business/{participant_id}" : {
      "get" : {
        "tags" : [ "Business" ],
        "summary" : "Participant Info",
        "description" : "Return information about business and it's services",
        "operationId" : "BusinessDetail",
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Participant Information",
            "schema" : {
              "$ref" : "#/definitions/BusinessDetail"
            }
          },
          "404" : {
            "description" : "Participant Not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/business/{participant_id}/service/{id}" : {
      "get" : {
        "tags" : [ "Service" ],
        "summary" : "get service metadata",
        "description" : "Returns a service metadata based on a single id for given participant",
        "operationId" : "getServiceMetadata",
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        }, {
          "$ref" : "#/parameters/serviceIdUrlParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service metadata response",
            "schema" : {
              "$ref" : "#/definitions/ServiceMetadata"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "put" : {
        "tags" : [ "Service" ],
        "summary" : "put service metadata",
        "description" : "Inserts a single service metadata values into the storage, replaces the old one if exists",
        "operationId" : "putServiceMetadata",
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        }, {
          "$ref" : "#/parameters/serviceIdUrlParameter"
        }, {
          "description" : "New service metadata",
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceMetadata"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Wrong input format, most likely the service metadata is malformed"
          },
          "401" : {
            "description" : "Authorization required"
          },
          "404" : {
            "description" : "Participant Not Found"
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Service" ],
        "summary" : "Delete specific service metadata",
        "description" : "Deletes a single service metadata based on the id supplied; available only to participant or service owner or trusted person.",
        "operationId" : "deleteServiceMetadata",
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        }, {
          "$ref" : "#/parameters/serviceIdUrlParameter"
        } ],
        "responses" : {
          "204" : {
            "description" : "service metadata deleted"
          },
          "401" : {
            "description" : "Authorization required"
          },
          "404" : {
            "description" : "Not Found"
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/business/{participant_id}/servicegroup/{name}" : {
      "get" : {
        "tags" : [ "Service Group" ],
        "summary" : "Get service group information and content",
        "description" : "Return service group service metadadatas list, extensions (optional) and group identificator.",
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        }, {
          "$ref" : "#/parameters/serviceGroupNameUrlParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service group response",
            "schema" : {
              "$ref" : "#/definitions/ServiceGroup"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "put" : {
        "tags" : [ "Service Group" ],
        "summary" : "Create/replace service group",
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        }, {
          "$ref" : "#/parameters/serviceGroupNameUrlParameter"
        }, {
          "description" : "New service group data",
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceGroup"
          }
        } ],
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Service group response",
            "schema" : {
              "$ref" : "#/definitions/ServiceGroup"
            }
          },
          "404" : {
            "description" : "Participant Not Found"
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions" : {
    "BusinessesList" : {
      "properties" : {
        "facets" : {
          "$ref" : "#/definitions/FacetInfo"
        },
        "start_from" : {
          "type" : "number"
        },
        "limit" : {
          "type" : "number"
        },
        "total" : {
          "type" : "number",
          "description" : "exact count of found documents frr this query"
        },
        "businesses" : {
          "description" : "list of found participants",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BusinessInfo"
          }
        }
      }
    },
    "BusinessDetail" : {
      "properties" : {
        "business" : {
          "$ref" : "#/definitions/BusinessDataWrapper"
        },
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceMetadata"
          }
        },
        "service_groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceGroup"
          }
        }
      }
    },
    "BusinessDataWrapper" : {
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/BusinessInfo"
        }
      }
    },
    "BusinessInfo" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "entity_type" : {
          "type" : "string"
        },
        "id_type" : {
          "type" : "string"
        },
        "id_value" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "participant_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "individual_names" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "non_individual_names" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Location" : {
      "properties" : {
        "country" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "postcode" : {
          "type" : "string"
        }
      }
    },
    "FacetInfo" : {
      "properties" : {
        "facetName" : {
          "type" : "string"
        },
        "facetContent" : {
          "type" : "string"
        }
      }
    },
    "ServiceGroup" : {
      "properties" : {
        "ServiceMetadataReferenceCollection" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "Extensions" : {
          "type" : "string"
        },
        "Name" : {
          "type" : "string"
        }
      }
    },
    "ServiceMetadata" : {
      "required" : [ "ParticipantIdentifier" ],
      "properties" : {
        "ParticipantIdentifier" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ParticipantIdentifier"
          }
        },
        "DocumentIdentifier" : {
          "$ref" : "#/definitions/DocumentIdentifier"
        },
        "ProcessList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Process"
          }
        }
      }
    },
    "Process" : {
      "properties" : {
        "ProcessIdentifier" : {
          "$ref" : "#/definitions/ProcessIdentifier"
        },
        "ServiceEndpointList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceEndpoint"
          }
        }
      }
    },
    "ServiceEndpoint" : {
      "properties" : {
        "transportProfile" : {
          "type" : "string"
        },
        "EndpointURI" : {
          "type" : "string"
        },
        "RequireBusinessLevelSignature" : {
          "type" : "string"
        },
        "MinimumAuthenticationLevel" : {
          "type" : "number"
        },
        "Certificate" : {
          "type" : "string"
        },
        "ServiceDescription" : {
          "type" : "string"
        },
        "TechnicalInformationUrl" : {
          "type" : "string"
        },
        "ServiceActivationDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ServiceExpirationDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "ProcessIdentifier" : {
      "properties" : {
        "scheme" : {
          "type" : "string",
          "description" : "The scheme of the identifier"
        },
        "value" : {
          "type" : "string",
          "description" : "The unique ID within the scheme"
        }
      }
    },
    "DocumentIdentifier" : {
      "properties" : {
        "scheme" : {
          "type" : "string",
          "description" : "The scheme of the identifier"
        },
        "value" : {
          "type" : "string",
          "description" : "The unique ID within the scheme"
        }
      }
    },
    "ParticipantIdentifier" : {
      "properties" : {
        "scheme" : {
          "type" : "string",
          "description" : "The scheme of the identifier"
        },
        "value" : {
          "type" : "string",
          "description" : "The unique ID within the scheme"
        }
      }
    }
  }
}