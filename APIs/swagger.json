{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0",
    "title" : "Service Metadata Publisher (SMP) interface specification",
    "description" : "The \"Service Metadata Publisher\" (SMP) provides the ability to discover detailed service information and associated digital certificates for any given business identifier.<br/> Please consider test installation data validty - some of them have like-production data, but this data value is not guaranteed and may be changed in development purposes; do not rely on data from specific hostname to real-world production installation untill service owners specifically said it's true and valid.<br/> This API specification should be valid for all supporting installations and implementations.<br/><br/> If you want OASIS XML output then pass Accept header with 'application/xml' value or ?format=xml as GET query parameter. OASIS-compliant urls also supported:<br/> https://smp.testpoint.io/urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307?format=xml<br/> https://smp.testpoint.io/urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307/service/dbc::invoice?format=xml<br/> Please note that XML format differs from JSON; json has more data and more flexible, but XML is compatable with OASIS specification."
  },
  "host" : "smp.testpoint.io",
  "schemes" : [ "https", "http" ],
  "basePath" : "/api/v1",
  "securityDefinitions" : {
    "Bearer" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://idp.testpoint.io/authorize",
      "flow" : "accessCode",
      "name" : "lalala",
      "tokenUrl" : "http://idp.testpoint.io/token",
      "description" : "Bearer token value and raw JWT token may be found on /security/integration/"
    }
  },
  "produces" : [ "application/json", "application/xml", "text/html" ],
  "parameters" : {
    "participantIdUrlParameter" : {
      "name" : "participant_id",
      "in" : "path",
      "description" : "string representation or hash",
      "required" : true,
      "type" : "string",
      "default" : "urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307"
    },
    "serviceIdUrlParameter" : {
      "name" : "id",
      "in" : "path",
      "description" : "ID of service metadata, string or hash",
      "required" : true,
      "type" : "string",
      "default" : "dbc::invoice"
    }
  },
  "paths" : {
    "/demo_auth" : {
      "get" : {
        "summary" : "Get base user information with authentication enabled",
        "description" : "used to check if OIDC/OAUTH2 Bearer token is correctly provided",
        "responses" : {
          "200" : {
            "description" : "Bearer/JWT is correct"
          },
          "401" : {
            "description" : "wrong auth parameters"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ]
      }
    },
    "/businesses" : {
      "get" : {
        "summary" : "Full list of participants (businesses) in system",
        "description" : "Returns a list of participants, optionally filtered; with optional facets values (for better search experience).",
        "parameters" : [ {
          "name" : "show_facets",
          "in" : "query",
          "description" : "shall facets real values be returned (1) or just empty dict (0)",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Freetext value to search by; proxied to search backend, current words behaviour - OR",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entity_type",
          "in" : "query",
          "description" : "Entity type; check 'facets' output for possible values; requires exact match",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "location_state",
          "in" : "query",
          "description" : "Location.state value; exact match; check 'facets' for examples",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "registration_status",
          "in" : "query",
          "description" : "ACT or CAN",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "year_from",
          "in" : "query",
          "description" : "Minimal year value (inclusive) to filter search results",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "year_to",
          "in" : "query",
          "description" : "Maximal year value (inclusive) to filter search results",
          "required" : false,
          "type" : "number"
        } ],
        "operationId" : "getBusinessesList",
        "responses" : {
          "200" : {
            "description" : "list of participant ids",
            "schema" : {
              "$ref" : "#/definitions/BusinessesList"
            }
          },
          "400" : {
            "description" : "wrong filters or limits values."
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "internal server error; no action required; may help to retry request later or contact support."
          }
        }
      }
    },
    "/business/{participant_id}" : {
      "get" : {
        "summary" : "Participant ID (business) info",
        "description" : "List of service groups, service endponts and generic data about given participant.",
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        } ],
        "operationId" : "getBusinessDetail",
        "responses" : {
          "200" : {
            "description" : "An array of service metadata",
            "schema" : {
              "$ref" : "#/definitions/BusinessDetail"
            }
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Any appropriate HTTP server error"
          }
        }
      }
    },
    "/business/{participant_id}/service/{id}" : {
      "get" : {
        "summary" : "get a specific service metadata",
        "description" : "Returns a service metadata based on a single ID for given participant",
        "operationId" : "getServiceMetadata",
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        }, {
          "$ref" : "#/parameters/serviceIdUrlParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "service metadata response",
            "schema" : {
              "$ref" : "#/definitions/ServiceMetadata"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "Any appropriate HTTP server error"
          }
        }
      },
      "put" : {
        "summary" : "put (create/replace) specific service metadata",
        "description" : "Inserts a single service metadata values into the storage",
        "operationId" : "putServiceMetadata",
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        }, {
          "$ref" : "#/parameters/serviceIdUrlParameter"
        }, {
          "description" : "New service metadata",
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceMetadata"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "404" : {
            "description" : "Participant Not Found"
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "Any appropriate HTTP server error"
          }
        }
      },
      "delete" : {
        "summary" : "delete specific service metadata",
        "description" : "deletes a single service metadata based on the ID supplied; available only to participant/service owner or trusted person",
        "operationId" : "deleteServiceMetadata",
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "parameters" : [ {
          "$ref" : "#/parameters/participantIdUrlParameter"
        }, {
          "$ref" : "#/parameters/serviceIdUrlParameter"
        } ],
        "responses" : {
          "204" : {
            "description" : "service metadata deleted"
          },
          "404" : {
            "description" : "Not Found"
          },
          "406" : {
            "description" : "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request."
          },
          "500" : {
            "description" : "Any appropriate HTTP server error"
          }
        }
      }
    }
  },
  "definitions" : {
    "BusinessesList" : {
      "properties" : {
        "facets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FacetInfo"
          }
        },
        "start_from" : {
          "type" : "number"
        },
        "limit" : {
          "type" : "number"
        },
        "total" : {
          "type" : "number",
          "description" : "exact count of found documents frr this query"
        },
        "businesses" : {
          "description" : "list of found participants",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BusinessInfo"
          }
        }
      }
    },
    "BusinessDetail" : {
      "properties" : {
        "business" : {
          "$ref" : "#/definitions/BusinessDataWrapper"
        },
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceMetadata"
          }
        },
        "service_groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceGroup"
          }
        }
      }
    },
    "BusinessDataWrapper" : {
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/BusinessInfo"
        }
      }
    },
    "BusinessInfo" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "entity_type" : {
          "type" : "string"
        },
        "id_type" : {
          "type" : "string"
        },
        "id_value" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "location" : {
          "$ref" : "#/definitions/Location"
        },
        "participant_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "individual_names" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "non_individual_names" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Location" : {
      "properties" : {
        "country" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "postcode" : {
          "type" : "string"
        }
      }
    },
    "FacetInfo" : {
      "properties" : {
        "facetName" : {
          "type" : "string"
        },
        "facetContent" : {
          "type" : "string"
        }
      }
    },
    "ServiceGroup" : {
      "properties" : {
        "ServiceMetadataReferenceCollection" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "Extensions" : {
          "type" : "string"
        },
        "Name" : {
          "type" : "string"
        }
      }
    },
    "ServiceMetadata" : {
      "required" : [ "ParticipantIdentifier" ],
      "properties" : {
        "ParticipantIdentifier" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ParticipantIdentifier"
          }
        },
        "DocumentIdentifier" : {
          "$ref" : "#/definitions/DocumentIdentifier"
        },
        "ProcessList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Process"
          }
        }
      }
    },
    "Process" : {
      "properties" : {
        "ProcessIdentifier" : {
          "$ref" : "#/definitions/ProcessIdentifier"
        },
        "ServiceEndpointList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceEndpoint"
          }
        }
      }
    },
    "ServiceEndpoint" : {
      "properties" : {
        "transportProfile" : {
          "type" : "string"
        },
        "EndpointURI" : {
          "type" : "string"
        },
        "RequireBusinessLevelSignature" : {
          "type" : "string"
        },
        "MinimumAuthenticationLevel" : {
          "type" : "number"
        },
        "Certificate" : {
          "type" : "string"
        },
        "ServiceDescription" : {
          "type" : "string"
        },
        "TechnicalInformationUrl" : {
          "type" : "string"
        },
        "ServiceActivationDate" : {
          "type" : "string",
          "format" : "date"
        },
        "ServiceExpirationDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "ProcessIdentifier" : {
      "properties" : {
        "scheme" : {
          "type" : "string",
          "description" : "The scheme of the identifier"
        },
        "value" : {
          "type" : "string",
          "description" : "The unique ID within the scheme"
        }
      }
    },
    "DocumentIdentifier" : {
      "properties" : {
        "scheme" : {
          "type" : "string",
          "description" : "The scheme of the identifier"
        },
        "value" : {
          "type" : "string",
          "description" : "The unique ID within the scheme"
        }
      }
    },
    "ParticipantIdentifier" : {
      "properties" : {
        "scheme" : {
          "type" : "string",
          "description" : "The scheme of the identifier"
        },
        "value" : {
          "type" : "string",
          "description" : "The unique ID within the scheme"
        }
      }
    }
  }
}